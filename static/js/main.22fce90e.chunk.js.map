{"version":3,"sources":["logo.svg","components/SearchBox/SearchBox.js","model/CityModel.js","asserts/waiting.jpg","utils/ApiDataService.js","components/SavedImageCard/SavedImageCard.js","pages/Cities.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","searchText","onSearchChange","results","onResultSelected","console","log","className","Form","Control","type","value","onChange","e","target","ListGroup","map","result","index","Item","action","onClick","CityModel","city","id","img","totalImages","this","name","pageNum","size","a","client","createClient","query","photos","search","page","per_page","setImage","src","tiny","medium","setTotalImages","total_results","image","getCityData","SavedImageCard","onDelete","Card","style","width","Row","Col","Img","variant","Body","Text","Button","Cities","useState","cityJSON","cities","setSearchText","setResults","activeCity","setActiveCity","setPage","cityImg","setCityImg","totalPages","setTotalPages","boundaryRange","loading","setLoading","savedImages","setSavedImages","saveImagesCards","undefined","saveImage","onSavedImageDelete","length","ApiDataService","data","activePage","concat","slice","Container","newSearchText","filter","element","toLowerCase","includes","Spinner","animation","alt","savePicture","color","Pagination","onPageChange","siblingRange","ellipsisItem","firstItem","lastItem","prevItem","nextItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22fce90e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Form, ListGroup } from 'react-bootstrap';\r\nimport './SearchBox.css'\r\n\r\n\r\nfunction SearchBox({placeholder, searchText, onSearchChange, results, onResultSelected}) {\r\n    debugger\r\n    console.log({results});\r\n    return (\r\n        <div className=\"c-searchbox\">\r\n            <Form.Control type=\"text\" placeholder={placeholder} value={searchText} \r\n                onChange={e => onSearchChange(e.target.value)}/>\r\n            <ListGroup className=\"result-box\">\r\n                {results.map((result, index) => \r\n                    <ListGroup.Item action onClick={() => onResultSelected(index)}>\r\n                        {result}\r\n                    </ListGroup.Item>)}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","export default class CityModel {\r\n    constructor(city, id, img, totalImages) {\r\n        this.id = id;\r\n        this.name = city;\r\n        this.img = img;\r\n        this.totalImages = totalImages;\r\n    }\r\n\r\n    setImage(img) {\r\n        this.img = img; \r\n    }\r\n\r\n    setTotalImages(totalImages) {\r\n        this.totalImages = totalImages; \r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/waiting.1f8e1bd9.jpg\";","import CityModel from \"../model/CityModel\";\r\nimport { createClient } from 'pexels';\r\nimport image from '../asserts/waiting.jpg';\r\n\r\nasync function getCityData(city, pageNum, size) {\r\n    debugger\r\n    const client = createClient('563492ad6f9170000100000122bbd5b61dd3428b85b45b0b0053b30a');\r\n        const query = city.name;\r\n        debugger\r\n        const photos = await client.photos.search({ page: pageNum, query, per_page: 1 });\r\n        if (!photos) {\r\n            city.setImage({image});\r\n            city.setTotalImages(1);\r\n        }\r\n        else {\r\n            if (size) {\r\n                city.setImage(photos.photos[0].src.tiny); \r\n            }\r\n            else{\r\n                city.setImage(photos.photos[0].src.medium);\r\n            }\r\n            city.setTotalImages(photos.total_results);\r\n        }\r\n        return city;\r\n        // return new CityModel(city.name, city.id, photos.photos[0].src.medium, photos.total_results);\r\n}\r\n\r\nexport default  {getCityData}","import React from 'react'\r\nimport { Button, Card, Col, Row } from 'react-bootstrap'\r\nimport './SavedImageCard.css'\r\n\r\nexport default function SavedImageCard({image, city, index, onDelete}) {\r\n    return (\r\n        <div className=\"c-saved-image-card\">\r\n            <Card style={{ width: '18rem' }}>\r\n                <Row className='no-gutters'>\r\n                    <Col className=\"col-md-7 c-tenant-img\">\r\n                        <Card.Img variant=\"top\" src={image} />\r\n                    </Col>\r\n                    <Col className=\"col-md-5 c-tenant-info\">\r\n                        <Card.Body>\r\n                            <Card.Text>{city}</Card.Text>\r\n                            <div className=\"saved-image-card-bottons\">\r\n                                <Button variant=\"light\" onClick={() => onDelete(index)}><i className=\"bi bi-x text-danger\"></i></Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Col>\r\n                </Row>    \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport SearchBox from '../components/SearchBox/SearchBox';\r\nimport cityJSON from '../data/cities.json';\r\nimport CityModel from '../model/CityModel';\r\nimport image from '../asserts/waiting.jpg';\r\nimport './Cities.css';\r\nimport { Pagination } from 'semantic-ui-react';\r\nimport ApiDataService from '../utils/ApiDataService';\r\nimport SavedImageCard from '../components/SavedImageCard/SavedImageCard';\r\n\r\nexport default function Cities() {\r\n    const [cities, setCities] = useState(cityJSON.cities.map((city, index) => new CityModel(city, index)));\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n    const [activeCity, setActiveCity] = useState();\r\n    const [page, setPage] = useState(1);\r\n    const [cityImg, setCityImg] = useState(\"\");\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [boundaryRange, setBoundaryRange] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [savedImages, setSavedImages] = useState([]);\r\n\r\n    const saveImagesCards = savedImages !== undefined ? savedImages.map((saveImage, index) => <SavedImageCard image={saveImage.img} city={saveImage.city} index={index} onDelete={onSavedImageDelete}></SavedImageCard>) : [];\r\n\r\n    function handleSearchChange(newSearchText) {\r\n        setSearchText(newSearchText);\r\n\r\n        if (newSearchText) {\r\n            debugger\r\n            setResults(cities.filter(element => element.name.toLowerCase().includes(newSearchText.toLowerCase())));\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    async function getCityImages(city) {\r\n        debugger\r\n        const test = results.length > 0 ? console.log(\"Get Image of \" + results[city].name) : null;\r\n        setSearchText([results[city].name])\r\n        setResults([]);\r\n        setPage(1);\r\n        setActiveCity(results[city]);\r\n        setLoading(true);\r\n        const data = await ApiDataService.getCityData(results[city], page);\r\n        setLoading(false);\r\n        setCityImg(data.img);\r\n        setTotalPages(data.totalImages);\r\n    }\r\n\r\n    async function handlePaginationChange(e, activePage) {\r\n        //(e, { activePage }) => this.setState({ activePage })\r\n        debugger\r\n        setLoading(true);\r\n        const data = await ApiDataService.getCityData(activeCity, activePage.activePage);\r\n        setLoading(false);\r\n        setCityImg(data.img);\r\n        setTotalPages(data.totalImages);\r\n        setPage(activePage.activePage);\r\n    }\r\n\r\n    async function savePicture() {\r\n        console.log(\"Should save the picture\");\r\n        setLoading(true);\r\n        const data = await ApiDataService.getCityData(activeCity, page, \"small\");\r\n        setLoading(false);\r\n        debugger\r\n        setSavedImages(savedImages => savedImages.concat({img: data.img, city: activeCity.name}));\r\n    }\r\n\r\n    function onSavedImageDelete(index) {\r\n        setSavedImages(savedImages => savedImages.slice(0, index).concat(savedImages.slice(index + 1, savedImages.length)));\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-cities\">\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"saved_pic\">\r\n                        {saveImagesCards}\r\n                    </Col>\r\n                    <Col>\r\n                        <SearchBox\r\n                            placeholder=\"Enter a city\"\r\n                            searchText={searchText}\r\n                            onSearchChange={handleSearchChange}\r\n                            results={results.map(result => result.name)}\r\n                            onResultSelected={getCityImages} />\r\n                        <div className=\"p-cities-img p-2\">\r\n                            {loading && <div className=\"p-cities-spinner\"><Spinner animation=\"border\" variant=\"primary\" /></div>}\r\n                            {cityImg == \"\" && <img src={image} alt=\"default_img\" />}\r\n                            {cityImg != \"\" && <img src={cityImg} alt=\"city\" />}\r\n                            {cityImg != \"\" && <Button className=\"p-cities-save-icon\" variant=\"link\" onClick={() => savePicture()}><i className=\"bi bi-plus-circle-fill\" style={{ color: 'lightskyblue' }}></i></Button>}\r\n                        </div>\r\n                        <Pagination className=\"p-2\"\r\n                            activePage={page}\r\n                            boundaryRange={boundaryRange}\r\n                            onPageChange={handlePaginationChange}\r\n                            size='mini'\r\n                            siblingRange={boundaryRange}\r\n                            totalPages={totalPages}\r\n                            // Heads up! All items are powered by shorthands, if you want to hide one of them, just pass `null` as value\r\n                            ellipsisItem={undefined}\r\n                            firstItem={undefined}\r\n                            lastItem={undefined}\r\n                            prevItem={undefined}\r\n                            nextItem={undefined}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Cities from './pages/Cities';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cities></Cities>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css'\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}